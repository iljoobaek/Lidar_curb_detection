// Generated by message_relay for processing frame IDs in diagnostic_msgs messages and services.
// DO NOT EDIT


#ifndef MESSAGE_RELAY_DIAGNOSTIC_MSGS_MESSAGE_PROCESSOR_H
#define MESSAGE_RELAY_DIAGNOSTIC_MSGS_MESSAGE_PROCESSOR_H

#include "message_relay/processor/message_processor.h"

#include "diagnostic_msgs/DiagnosticArray.h"
#include "diagnostic_msgs/DiagnosticStatus.h"
#include "diagnostic_msgs/KeyValue.h"

#include "diagnostic_msgs/AddDiagnostics.h"
#include "diagnostic_msgs/SelfTest.h"

namespace message_relay
{

template<>
void MessageProcessor<diagnostic_msgs::DiagnosticArray, FrameIdProcessor>::processMessage(diagnostic_msgs::DiagnosticArray::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<diagnostic_msgs::KeyValue, FrameIdProcessor>::processMessage(diagnostic_msgs::KeyValue::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<diagnostic_msgs::DiagnosticStatus, FrameIdProcessor>::processMessage(diagnostic_msgs::DiagnosticStatus::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<diagnostic_msgs::AddDiagnostics, FrameIdProcessor>::processRequest(diagnostic_msgs::AddDiagnostics::Request &req, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<diagnostic_msgs::AddDiagnostics, FrameIdProcessor>::processResponse(diagnostic_msgs::AddDiagnostics::Response &res, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<diagnostic_msgs::SelfTest, FrameIdProcessor>::processRequest(diagnostic_msgs::SelfTest::Request &req, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<diagnostic_msgs::SelfTest, FrameIdProcessor>::processResponse(diagnostic_msgs::SelfTest::Response &res, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<diagnostic_msgs::DiagnosticArray, TimeProcessor>::processMessage(diagnostic_msgs::DiagnosticArray::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<diagnostic_msgs::KeyValue, TimeProcessor>::processMessage(diagnostic_msgs::KeyValue::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<diagnostic_msgs::DiagnosticStatus, TimeProcessor>::processMessage(diagnostic_msgs::DiagnosticStatus::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<diagnostic_msgs::AddDiagnostics, TimeProcessor>::processRequest(diagnostic_msgs::AddDiagnostics::Request &req, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<diagnostic_msgs::AddDiagnostics, TimeProcessor>::processResponse(diagnostic_msgs::AddDiagnostics::Response &res, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<diagnostic_msgs::SelfTest, TimeProcessor>::processRequest(diagnostic_msgs::SelfTest::Request &req, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<diagnostic_msgs::SelfTest, TimeProcessor>::processResponse(diagnostic_msgs::SelfTest::Response &res, TimeProcessor::ConstPtr &time_processor);

}  // namespace message_relay

#endif // MESSAGE_RELAY_DIAGNOSTIC_MSGS_MESSAGE_PROCESSOR_H
