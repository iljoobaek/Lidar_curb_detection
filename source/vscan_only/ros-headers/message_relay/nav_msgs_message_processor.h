// Generated by message_relay for processing frame IDs in nav_msgs messages and services.
// DO NOT EDIT


#ifndef MESSAGE_RELAY_NAV_MSGS_MESSAGE_PROCESSOR_H
#define MESSAGE_RELAY_NAV_MSGS_MESSAGE_PROCESSOR_H

#include "message_relay/processor/message_processor.h"

#include "nav_msgs/GridCells.h"
#include "nav_msgs/MapMetaData.h"
#include "nav_msgs/OccupancyGrid.h"
#include "nav_msgs/Odometry.h"
#include "nav_msgs/Path.h"
#include "nav_msgs/GetMapAction.h"
#include "nav_msgs/GetMapActionGoal.h"
#include "nav_msgs/GetMapActionResult.h"
#include "nav_msgs/GetMapActionFeedback.h"
#include "nav_msgs/GetMapGoal.h"
#include "nav_msgs/GetMapResult.h"
#include "nav_msgs/GetMapFeedback.h"

#include "nav_msgs/GetMap.h"
#include "nav_msgs/GetPlan.h"
#include "nav_msgs/SetMap.h"

namespace message_relay
{

template<>
void MessageProcessor<nav_msgs::Odometry, FrameIdProcessor>::processMessage(nav_msgs::Odometry::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::GetMapGoal, FrameIdProcessor>::processMessage(nav_msgs::GetMapGoal::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::OccupancyGrid, FrameIdProcessor>::processMessage(nav_msgs::OccupancyGrid::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::GetMapActionGoal, FrameIdProcessor>::processMessage(nav_msgs::GetMapActionGoal::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::GetMapActionFeedback, FrameIdProcessor>::processMessage(nav_msgs::GetMapActionFeedback::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::MapMetaData, FrameIdProcessor>::processMessage(nav_msgs::MapMetaData::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::GetMapFeedback, FrameIdProcessor>::processMessage(nav_msgs::GetMapFeedback::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::GetMapActionResult, FrameIdProcessor>::processMessage(nav_msgs::GetMapActionResult::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::GridCells, FrameIdProcessor>::processMessage(nav_msgs::GridCells::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::Path, FrameIdProcessor>::processMessage(nav_msgs::Path::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::GetMapAction, FrameIdProcessor>::processMessage(nav_msgs::GetMapAction::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::GetMapResult, FrameIdProcessor>::processMessage(nav_msgs::GetMapResult::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<nav_msgs::GetMap, FrameIdProcessor>::processRequest(nav_msgs::GetMap::Request &req, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<nav_msgs::GetMap, FrameIdProcessor>::processResponse(nav_msgs::GetMap::Response &res, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<nav_msgs::GetPlan, FrameIdProcessor>::processRequest(nav_msgs::GetPlan::Request &req, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<nav_msgs::GetPlan, FrameIdProcessor>::processResponse(nav_msgs::GetPlan::Response &res, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<nav_msgs::SetMap, FrameIdProcessor>::processRequest(nav_msgs::SetMap::Request &req, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void ServiceProcessor<nav_msgs::SetMap, FrameIdProcessor>::processResponse(nav_msgs::SetMap::Response &res, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<nav_msgs::Odometry, TimeProcessor>::processMessage(nav_msgs::Odometry::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::GetMapGoal, TimeProcessor>::processMessage(nav_msgs::GetMapGoal::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::OccupancyGrid, TimeProcessor>::processMessage(nav_msgs::OccupancyGrid::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::GetMapActionGoal, TimeProcessor>::processMessage(nav_msgs::GetMapActionGoal::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::GetMapActionFeedback, TimeProcessor>::processMessage(nav_msgs::GetMapActionFeedback::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::MapMetaData, TimeProcessor>::processMessage(nav_msgs::MapMetaData::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::GetMapFeedback, TimeProcessor>::processMessage(nav_msgs::GetMapFeedback::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::GetMapActionResult, TimeProcessor>::processMessage(nav_msgs::GetMapActionResult::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::GridCells, TimeProcessor>::processMessage(nav_msgs::GridCells::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::Path, TimeProcessor>::processMessage(nav_msgs::Path::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::GetMapAction, TimeProcessor>::processMessage(nav_msgs::GetMapAction::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<nav_msgs::GetMapResult, TimeProcessor>::processMessage(nav_msgs::GetMapResult::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<nav_msgs::GetMap, TimeProcessor>::processRequest(nav_msgs::GetMap::Request &req, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<nav_msgs::GetMap, TimeProcessor>::processResponse(nav_msgs::GetMap::Response &res, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<nav_msgs::GetPlan, TimeProcessor>::processRequest(nav_msgs::GetPlan::Request &req, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<nav_msgs::GetPlan, TimeProcessor>::processResponse(nav_msgs::GetPlan::Response &res, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<nav_msgs::SetMap, TimeProcessor>::processRequest(nav_msgs::SetMap::Request &req, TimeProcessor::ConstPtr &time_processor);

template<>
void ServiceProcessor<nav_msgs::SetMap, TimeProcessor>::processResponse(nav_msgs::SetMap::Response &res, TimeProcessor::ConstPtr &time_processor);

}  // namespace message_relay

#endif // MESSAGE_RELAY_NAV_MSGS_MESSAGE_PROCESSOR_H
