// Generated by message_relay for processing frame IDs in trajectory_msgs messages and services.
// DO NOT EDIT


#ifndef MESSAGE_RELAY_TRAJECTORY_MSGS_MESSAGE_PROCESSOR_H
#define MESSAGE_RELAY_TRAJECTORY_MSGS_MESSAGE_PROCESSOR_H

#include "message_relay/processor/message_processor.h"

#include "trajectory_msgs/JointTrajectory.h"
#include "trajectory_msgs/JointTrajectoryPoint.h"
#include "trajectory_msgs/MultiDOFJointTrajectory.h"
#include "trajectory_msgs/MultiDOFJointTrajectoryPoint.h"


namespace message_relay
{

template<>
void MessageProcessor<trajectory_msgs::JointTrajectory, FrameIdProcessor>::processMessage(trajectory_msgs::JointTrajectory::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<trajectory_msgs::MultiDOFJointTrajectoryPoint, FrameIdProcessor>::processMessage(trajectory_msgs::MultiDOFJointTrajectoryPoint::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<trajectory_msgs::MultiDOFJointTrajectory, FrameIdProcessor>::processMessage(trajectory_msgs::MultiDOFJointTrajectory::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<trajectory_msgs::JointTrajectoryPoint, FrameIdProcessor>::processMessage(trajectory_msgs::JointTrajectoryPoint::Ptr &msg, FrameIdProcessor::ConstPtr &frame_id_processor);

template<>
void MessageProcessor<trajectory_msgs::JointTrajectory, TimeProcessor>::processMessage(trajectory_msgs::JointTrajectory::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<trajectory_msgs::MultiDOFJointTrajectoryPoint, TimeProcessor>::processMessage(trajectory_msgs::MultiDOFJointTrajectoryPoint::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<trajectory_msgs::MultiDOFJointTrajectory, TimeProcessor>::processMessage(trajectory_msgs::MultiDOFJointTrajectory::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

template<>
void MessageProcessor<trajectory_msgs::JointTrajectoryPoint, TimeProcessor>::processMessage(trajectory_msgs::JointTrajectoryPoint::Ptr &msg, TimeProcessor::ConstPtr &time_processor);

}  // namespace message_relay

#endif // MESSAGE_RELAY_TRAJECTORY_MSGS_MESSAGE_PROCESSOR_H
